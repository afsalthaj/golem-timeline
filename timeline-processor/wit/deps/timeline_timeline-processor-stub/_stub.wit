package timeline:timeline-processor-stub;

interface stub-timeline-processor {
  use golem:rpc/types@0.1.0.{uri};
  use timeline:event-processor/api.{event-value};
  use timeline:event-processor/api.{timeline-result};

  record timeline-result-worker {
    worker-id: string,
    template-id: string
  }

  variant typed-timeline-result-worker {
    leaf-timeline(leaf-timeline-node),
    derived-timeline(derived-timeline-node)
  }

  variant leaf-timeline-node {
    tl-has-existed(timeline-result-worker),
    tl-has-existed-within(timeline-result-worker),
    tl-latest-event-to-state(timeline-result-worker),
  }

  variant derived-timeline-node {
    equal-to(timeline-result-worker),
    greater-than(timeline-result-worker),
    greater-than-or-equal-to(timeline-result-worker),
    less-than(timeline-result-worker),
    less-than-or-equal-to(timeline-result-worker),
    and(timeline-result-worker),
    or(timeline-result-worker),
    not(timeline-result-worker)
  }

  resource api {
    constructor(location: uri);
    initialize-equal: func(child-worker: typed-timeline-result-worker, event-value: event-value) -> result<string, string>;
    initialize-greater-than: func(child-worker: typed-timeline-result-worker, event-value: event-value) -> result<string, string>;
    initialize-greater-than-or-equal-to: func(child-worker: typed-timeline-result-worker, event-value: event-value) -> result<string, string>;
    initialize-less-than: func(child-worker: typed-timeline-result-worker, event-value: event-value) -> result<string, string>;
    initialize-less-than-or-equal-to: func(child-worker: typed-timeline-result-worker, event-value: event-value) -> result<string, string>;
    initialize-and: func(child-worker1: typed-timeline-result-worker, child-worker2: typed-timeline-result-worker) -> result<string, string>;
    initialize-or: func(child-worker1: typed-timeline-result-worker, child-worker2: typed-timeline-result-worker) -> result<string, string>;
    initialize-not: func(child-worker: typed-timeline-result-worker) -> result<string, string>;
    get-timeline-result: func(t1: u64) -> result<timeline-result, string>;
  }

}

world wasm-rpc-stub-timeline-processor {
  export stub-timeline-processor;
}