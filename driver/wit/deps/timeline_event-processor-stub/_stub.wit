package timeline:event-processor-stub;

interface stub-event-processor {
  use golem:rpc/types@0.1.0.{uri};
  use timeline:event-processor/api.{event-value};
  use timeline:event-processor/api.{event};
  use timeline:event-processor/api.{time-period};
  use timeline:event-processor/api.{timeline-result-point};
  use timeline:event-processor/api.{timeline-result};
  use timeline:event-processor/api.{event-predicate-op};
  use timeline:event-processor/api.{event-predicate};

  resource api {
    constructor(location: uri);
    initialize-latest-event-state: func(event-col-name: string) -> result<string, string>;
    initialize-tl-has-existed: func(event-predicate: event-predicate) -> result<string, string>;
    initialize-tl-has-existed-within: func(event-predicate: event-predicate, time: u64) -> result<string, string>;
    add-event: func(event: event) -> result<string, string>;
    latest-event-to-state: func(t1: u64) -> result<timeline-result, string>;
    tl-has-existed: func(t1: u64) -> result<timeline-result, string>;
    tl-has-existed-within: func(t1: u64) -> result<timeline-result, string>;
  }

}

world wasm-rpc-stub-event-processor {
  export stub-event-processor;
}
